From 7e0613c3645544539d2e178ac48c0142b31651a5 Mon Sep 17 00:00:00 2001
From: Waynium <wandilenyembe38@gmail.com>
Date: Mon, 24 Jan 2022 09:03:11 +0200
Subject: [PATCH] Fixed Patch file

---
 0001-Create-Patch-File.patch | 130 +++++++++++++++++++++++++++++++++++
 solution3.patch              | 119 ++++++++++++++++++++++++++++++++
 src/Graph.tsx                |  36 +++++-----
 3 files changed, 268 insertions(+), 17 deletions(-)
 create mode 100644 0001-Create-Patch-File.patch
 create mode 100644 solution3.patch

diff --git a/0001-Create-Patch-File.patch b/0001-Create-Patch-File.patch
new file mode 100644
index 0000000..af96947
--- /dev/null
+++ b/0001-Create-Patch-File.patch
@@ -0,0 +1,130 @@
+From fb2931e01c83a687da8a9bcf0abe15e52f042475 Mon Sep 17 00:00:00 2001
+From: Waynium <wandilenyembe38@gmail.com>
+Date: Mon, 24 Jan 2022 08:17:22 +0200
+Subject: [PATCH] Create Patch File
+
+---
+ package.json           |  4 ++--
+ src/DataManipulator.ts | 32 ++++++++++++++++++++++----------
+ src/Graph.tsx          | 25 +++++++++++++++----------
+ 3 files changed, 39 insertions(+), 22 deletions(-)
+
+diff --git a/package.json b/package.json
+index d2798ba..9c9d33b 100644
+--- a/package.json
++++ b/package.json
+@@ -17,8 +17,8 @@
+     "react-scripts": "2.1.3"
+   },
+   "scripts": {
+-    "start": "react-scripts start",
+-    "build": "react-scripts build",
++    "start": "react-scripts --openssl-legacy-provider start",
++    "build": "react-scripts --openssl-legacy-provider build",
+     "test": "react-scripts test",
+     "eject": "react-scripts eject"
+   },
+diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
+index f6b15ff..828323b 100644
+--- a/src/DataManipulator.ts
++++ b/src/DataManipulator.ts
+@@ -1,20 +1,32 @@
+ import { ServerRespond } from './DataStreamer';
+ 
+ export interface Row {
+-  stock: string,
+-  top_ask_price: number,
++  price_abc: number,
++  price_def: number,
++  ratio: number,
+   timestamp: Date,
++  upper_Bound: number,
++  lower_Bound: number,
++  trigger_alert: number | undefined,
+ }
+ 
+ 
+ export class DataManipulator {
+-  static generateRow(serverResponds: ServerRespond[]): Row[] {
+-    return serverResponds.map((el: any) => {
+-      return {
+-        stock: el.stock,
+-        top_ask_price: el.top_ask && el.top_ask.price || 0,
+-        timestamp: el.timestamp,
+-      };
+-    })
++  static generateRow(serverResponds: ServerRespond[]): Row {
++    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price)/2;
++    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price)/2;
++    const ratio = priceABC / priceDEF;
++    const upperBound = 1 + 0.05; // this can be + - 10%, so it ca be 0.07 etc...
++    const lowerBound = 1 - 0.05;
++    return {
++      price_abc: priceABC,
++      price_def: priceDEF,
++      ratio,
++      timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ?
++        serverResponds[0].timestamp : serverResponds[1].timestamp,
++      upper_Bound: upperBound,
++      lower_Bound: lowerBound,
++      trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
++    };
+   }
+ }
+diff --git a/src/Graph.tsx b/src/Graph.tsx
+index 58fb997..e278dc0 100644
+--- a/src/Graph.tsx
++++ b/src/Graph.tsx
+@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
+     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+ 
+     const schema = {
+-      stock: 'string',
+-      top_ask_price: 'float',
+-      top_bid_price: 'float',
++      price_abc: 'float',
++      price_def: 'float',
++      ratio: 'float',
+       timestamp: 'date',
++      upper_bound: 'float',
++      lower_bound: 'float',
++      trigger_alert: 'float',
+     };
+ 
+     if (window.perspective && window.perspective.worker()) {
+@@ -36,23 +39,25 @@ class Graph extends Component<IProps, {}> {
+       // Load the `table` in the `<perspective-viewer>` DOM reference.
+       elem.load(this.table);
+       elem.setAttribute('view', 'y_line');
+-      elem.setAttribute('column-pivots', '["stock"]');
+       elem.setAttribute('row-pivots', '["timestamp"]');
+-      elem.setAttribute('columns', '["top_ask_price"]');
++      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
+       elem.setAttribute('aggregates', JSON.stringify({
+-        stock: 'distinctcount',
+-        top_ask_price: 'avg',
+-        top_bid_price: 'avg',
++        price_abc: 'avg',
++        price_def: 'avg',
++        ratio: 'avg',
+         timestamp: 'distinct count',
++        upper_bound: 'avg',
++        lower_bound: 'avg',
++        trigger_alert: 'avg',
+       }));
+     }
+   }
+ 
+   componentDidUpdate() {
+     if (this.table) {
+-      this.table.update(
++      this.table.update([
+         DataManipulator.generateRow(this.props.data),
+-      );
++      ]);
+     }
+   }
+ }
+-- 
+2.28.0.windows.1
+
diff --git a/solution3.patch b/solution3.patch
new file mode 100644
index 0000000..d8220d6
--- /dev/null
+++ b/solution3.patch
@@ -0,0 +1,119 @@
+From 8756e143807fc64fa74c6af3afd9bb66fc339b20 Mon Sep 17 00:00:00 2001
+From: Joe Ferrer <joe@insidesherpa.com>
+Date: Fri, 18 Oct 2019 13:09:54 +0800
+Subject: [PATCH] Make model answer
+
+---
+ src/DataManipulator.ts | 35 ++++++++++++++++++++++++-----------
+ src/Graph.tsx          | 28 ++++++++++++++++------------
+ 2 files changed, 40 insertions(+), 23 deletions(-)
+
+diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
+index f6b15ff..2f995ed 100644
+--- a/src/DataManipulator.ts
++++ b/src/DataManipulator.ts
+@@ -1,20 +1,33 @@
+ import { ServerRespond } from './DataStreamer';
+ 
++/* Row to be inserted to Perspective Table */
+ export interface Row {
+-  stock: string,
+-  top_ask_price: number,
+-  timestamp: Date,
++  price_abc: number,    // (ask + bid) / 2
++  price_def: number,
++  ratio: number,        // price ABC / price DEF
++  timestamp: Date,      // data timestamp for X axis
++  upper_bound: number,  // + 0.05
++  lower_bound: number,  // - 0.05
++  trigger_alert: number | undefined,
+ }
+ 
+ 
+ export class DataManipulator {
+-  static generateRow(serverResponds: ServerRespond[]): Row[] {
+-    return serverResponds.map((el: any) => {
+-      return {
+-        stock: el.stock,
+-        top_ask_price: el.top_ask && el.top_ask.price || 0,
+-        timestamp: el.timestamp,
+-      };
+-    })
++  static generateRow(serverRespond: ServerRespond[]): Row {
++    const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
++    const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
++    const ratio = priceABC / priceDEF;
++    const upperBound = 1 + 0.05;
++    const lowerBound = 1 - 0.05;
++    return {
++      price_abc: priceABC,
++      price_def: priceDEF,
++      ratio,
++      timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ?
++        serverRespond[0].timestamp : serverRespond[1].timestamp,
++      upper_bound: upperBound,
++      lower_bound: lowerBound,
++      trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
++    };
+   }
+ }
+diff --git a/src/Graph.tsx b/src/Graph.tsx
+index 58fb997..54a6f1f 100644
+--- a/src/Graph.tsx
++++ b/src/Graph.tsx
+@@ -23,36 +23,40 @@ class Graph extends Component<IProps, {}> {
+     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+ 
+     const schema = {
+-      stock: 'string',
+-      top_ask_price: 'float',
+-      top_bid_price: 'float',
++      price_abc: 'float',
++      price_def: 'float',
++      ratio: 'float',
+       timestamp: 'date',
++      upper_bound: 'float',
++      lower_bound: 'float',
++      trigger_alert: 'float',
+     };
+-
+-    if (window.perspective && window.perspective.worker()) {
++    if (window.perspective) {
+       this.table = window.perspective.worker().table(schema);
+     }
+     if (this.table) {
+       // Load the `table` in the `<perspective-viewer>` DOM reference.
+       elem.load(this.table);
+       elem.setAttribute('view', 'y_line');
+-      elem.setAttribute('column-pivots', '["stock"]');
+       elem.setAttribute('row-pivots', '["timestamp"]');
+-      elem.setAttribute('columns', '["top_ask_price"]');
++      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
+       elem.setAttribute('aggregates', JSON.stringify({
+-        stock: 'distinctcount',
+-        top_ask_price: 'avg',
+-        top_bid_price: 'avg',
++        price_abc: 'avg',
++        price_def: 'avg',
++        ratio: 'avg',
+         timestamp: 'distinct count',
++        upper_bound: 'avg',
++        lower_bound: 'avg',
++        trigger_alert: 'avg',
+       }));
+     }
+   }
+ 
+   componentDidUpdate() {
+     if (this.table) {
+-      this.table.update(
++      this.table.update([
+         DataManipulator.generateRow(this.props.data),
+-      );
++      ]);
+     }
+   }
+ }
+-- 
+2.17.1
+
diff --git a/src/Graph.tsx b/src/Graph.tsx
index e278dc0..00753b7 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -33,23 +33,25 @@ class Graph extends Component<IProps, {}> {
     };
 
     if (window.perspective && window.perspective.worker()) {
-      this.table = window.perspective.worker().table(schema);
-    }
-    if (this.table) {
-      // Load the `table` in the `<perspective-viewer>` DOM reference.
-      elem.load(this.table);
-      elem.setAttribute('view', 'y_line');
-      elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
-      elem.setAttribute('aggregates', JSON.stringify({
-        price_abc: 'avg',
-        price_def: 'avg',
-        ratio: 'avg',
-        timestamp: 'distinct count',
-        upper_bound: 'avg',
-        lower_bound: 'avg',
-        trigger_alert: 'avg',
-      }));
+      if (window.perspective) {
+        this.table = window.perspective.worker().table(schema);
+      }
+      if (this.table) {
+        // Load the `table` in the `<perspective-viewer>` DOM reference.
+        elem.load(this.table);
+        elem.setAttribute('view', 'y_line');
+        elem.setAttribute('row-pivots', '["timestamp"]');
+        elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
+        elem.setAttribute('aggregates', JSON.stringify({
+          price_abc: 'avg',
+          price_def: 'avg',
+          ratio: 'avg',
+          timestamp: 'distinct count',
+          upper_bound: 'avg',
+          lower_bound: 'avg',
+          trigger_alert: 'avg',
+        }));
+      }
     }
   }
 
-- 
2.28.0.windows.1

